name: Deploy to GCP

on:
  push:
    branches:
      - main
  pull_request:
    branches: 
      - main

jobs:
  unit-test:
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        node-version: [22.x]
    
    steps: 
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with: 
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm run test:unit

  integration-test:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:5.0
        ports: 
          - 27017:27017
    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run integration tests
        run: npm run test:integration
        env: 
          MONGO_URL_TEST: mongodb://localhost:27017/test-transactions-api

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    needs:
      [unit-test, integration-test]

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: üîí Google Auth
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: üèóÔ∏è Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ secrets.SERVICE_NAME }}
          region: ${{ secrets.SERVICE_REGION }}
          source: ./

      - name: üì§ Show Output
        run: echo ${{ steps.deploy.outputs.url }}